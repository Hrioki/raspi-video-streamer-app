apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.admc.javaPropFile'

// For custom URL settings, create a secure-gradle.properties file and place the path below.
// The file should look like this, replacing the values with the values for your server:
//      BaseApiUrl=http://hostname:port
//      BaseRawStreamUrl=http://hostname:port
def secureProperties = new File('/Users/robsmall/src/android/RaspiVideoStreamer/secure-gradle.properties')
if (secureProperties.isFile()) {
    propFileLoader.load(secureProperties)
}

android {
    // Fix for https://github.com/ReactiveX/RxJava/issues/4445
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    // Used to hide urls from the android application so they can be passed in secretly from the
    // secureProperties file above.
    def BASE_API_URL
    def BASE_RAW_STREAM_URL
    if (project.hasProperty('BaseApiUrl') && project.hasProperty('BaseRawStreamUrl')) {
        BASE_API_URL = '"' + BaseApiUrl + '"'
        BASE_RAW_STREAM_URL = '"' + BaseRawStreamUrl + '"'
    } else {
        BASE_API_URL = '"' + "http://0.0.0.0:5000" + '"'
        BASE_RAW_STREAM_URL = '"' + "http://0.0.0.0:8000" + '"'
    }

    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "robsmall.raspivideostreamer"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Set the BuildConfig fields to be used in the application from the secureProperties file.
        each {
            it.buildConfigField 'String', 'BASE_API_URL', BASE_API_URL
            it.buildConfigField 'String', 'BASE_RAW_STREAM_URL', BASE_RAW_STREAM_URL
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

buildscript {
    ext.butterknifeVersion = '8.8.1'
    ext.okHttpVersion = '3.9.0'
    ext.retrofitVersion = '2.3.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation "com.jakewharton:butterknife:${butterknifeVersion}"
    kapt "com.jakewharton:butterknife-compiler:${butterknifeVersion}"

    implementation 'com.jakewharton.timber:timber:4.5.1'

    implementation 'com.github.niqdev:mjpeg-view:1.3.2'

    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"

    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofitVersion}"

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // TODO: play around with Moshi more
    compile 'com.squareup.moshi:moshi:1.5.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
